apiVersion: kubeadm.k8s.io/v1beta1
kind: InitConfiguration
nodeRegistration:
  name: {{ kubernetes_hostname }}
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
localAPIEndpoint:
  advertiseAddress: {{ ansible_default_ipv4.address }}
  bindPort: 6443
---
apiVersion: kubeadm.k8s.io/v1beta1
kind: ClusterConfiguration
etcd:
  external:
    endpoints: 
{{ etcd.endpoints | to_nice_yaml | indent(4, true) }}
    caFile: {{ etcd.caFile }}
    certFile: {{ etcd.certFile }}
    keyFile: {{ etcd.keyFile }}
clusterName: {{ kubernetes_cluster_name }}
kubernetesVersion: {{ kubernetes_version }}
imageRepository: "k8s.gcr.io"
useHyperKubeImage: false
controlPlaneEndpoint: {{ kubernetes_control_plane_address }}
DNS:
  type: "CoreDNS"
apiServer:
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,PodNodeSelector,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
    cloud-provider: {{ kubernetes_cloud_provider }}
    audit-log-maxage: "{{ audit_policy_max_age }}"
    audit-log-path: "{{ audit_log_dir }}/kube-apiserver-audit.log"
    audit-policy-file: {{ audit_policy_config_path }}
    audit-log-maxsize: "50"
    audit-log-maxbackup: "20"
{% if oidc_isssuer_url != "" %}
    oidc-issuer-url: {{ oidc_isssuer_url}}
    oidc-client-id: {{ oidc_client_id }}
    oidc-username-claim: "{{ oidc_username_claim }}"
    oidc-groups-claim: "{{ oidc_groups_claim }}"
    oidc-groups-prefix: "{{ oidc_group_prefix }}"
{% endif %}
  extraVolumes:
  - name: audit-files
    hostPath: {{ audit_log_dir }}
    mountPath: {{ audit_log_dir }}
    readonly: false
    pathType: Directory
  - name: audit-policy
    hostPath: {{ audit_policy_config_path }}
    mountPath: {{ audit_policy_config_path }}
    readonly: true
    pathType: File
scheduler:
  extraArgs:
    address: {{ ansible_default_ipv4.address }}
controllerManager:
  extraArgs:
    address: {{ ansible_default_ipv4.address }}
    cloud-provider: {{ kubernetes_cloud_provider }}
    configure-cloud-routes: "false"
networking:
  podSubnet: {{ kubernetes_pod_cidr }}
  serviceSubnet: {{ kubernetes_svc_cidr }}
  dnsDomain: "cluster.local"
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
bindAddress: 0.0.0.0
clusterCIDR: "{{ kubernetes_pod_cidr }}"
ipvs:
  excludeCIDRs: null
  minSyncPeriod: 0s
  scheduler: ""
  syncPeriod: 30s
metricsBindAddress: {{ ansible_default_ipv4.address }}:10249
mode: ipvs
